// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dvmodel.proto

package dvmodel

import (
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"

	github_com_cayleygraph_quad "github.com/cayleygraph/quad"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Driver int32

const (
	Driver_UnknownDriver Driver = 0
	Driver_GitHub        Driver = 1
)

var Driver_name = map[int32]string{
	0: "UnknownDriver",
	1: "GitHub",
}

var Driver_value = map[string]int32{
	"UnknownDriver": 0,
	"GitHub":        1,
}

func (x Driver) String() string {
	return proto.EnumName(Driver_name, int32(x))
}

func (Driver) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_106647ce772da30c, []int{0}
}

type Owner_Kind int32

const (
	Owner_UnknownKind  Owner_Kind = 0
	Owner_User         Owner_Kind = 1
	Owner_Organization Owner_Kind = 2
	Owner_Team         Owner_Kind = 3
	Owner_Repo         Owner_Kind = 4
	Owner_Provider     Owner_Kind = 5
)

var Owner_Kind_name = map[int32]string{
	0: "UnknownKind",
	1: "User",
	2: "Organization",
	3: "Team",
	4: "Repo",
	5: "Provider",
}

var Owner_Kind_value = map[string]int32{
	"UnknownKind":  0,
	"User":         1,
	"Organization": 2,
	"Team":         3,
	"Repo":         4,
	"Provider":     5,
}

func (x Owner_Kind) String() string {
	return proto.EnumName(Owner_Kind_name, int32(x))
}

func (Owner_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_106647ce772da30c, []int{0, 0}
}

type Owner_ForkStatus int32

const (
	Owner_UnknownForkStatus Owner_ForkStatus = 0
	Owner_IsFork            Owner_ForkStatus = 1
	Owner_IsSource          Owner_ForkStatus = 2
)

var Owner_ForkStatus_name = map[int32]string{
	0: "UnknownForkStatus",
	1: "IsFork",
	2: "IsSource",
}

var Owner_ForkStatus_value = map[string]int32{
	"UnknownForkStatus": 0,
	"IsFork":            1,
	"IsSource":          2,
}

func (x Owner_ForkStatus) String() string {
	return proto.EnumName(Owner_ForkStatus_name, int32(x))
}

func (Owner_ForkStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_106647ce772da30c, []int{0, 1}
}

type Task_Kind int32

const (
	Task_UnknownKind  Task_Kind = 0
	Task_Issue        Task_Kind = 1
	Task_MergeRequest Task_Kind = 2
	Task_Milestone    Task_Kind = 3
	Task_Epic         Task_Kind = 4
	Task_Story        Task_Kind = 5
	Task_Card         Task_Kind = 6
)

var Task_Kind_name = map[int32]string{
	0: "UnknownKind",
	1: "Issue",
	2: "MergeRequest",
	3: "Milestone",
	4: "Epic",
	5: "Story",
	6: "Card",
}

var Task_Kind_value = map[string]int32{
	"UnknownKind":  0,
	"Issue":        1,
	"MergeRequest": 2,
	"Milestone":    3,
	"Epic":         4,
	"Story":        5,
	"Card":         6,
}

func (x Task_Kind) String() string {
	return proto.EnumName(Task_Kind_name, int32(x))
}

func (Task_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_106647ce772da30c, []int{1, 0}
}

type Task_State int32

const (
	Task_UnknownState Task_State = 0
	Task_Open         Task_State = 1
	Task_Closed       Task_State = 2
)

var Task_State_name = map[int32]string{
	0: "UnknownState",
	1: "Open",
	2: "Closed",
}

var Task_State_value = map[string]int32{
	"UnknownState": 0,
	"Open":         1,
	"Closed":       2,
}

func (x Task_State) String() string {
	return proto.EnumName(Task_State_name, int32(x))
}

func (Task_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_106647ce772da30c, []int{1, 1}
}

type Topic_Kind int32

const (
	Topic_UnknownKind Topic_Kind = 0
	Topic_Label       Topic_Kind = 1
)

var Topic_Kind_name = map[int32]string{
	0: "UnknownKind",
	1: "Label",
}

var Topic_Kind_value = map[string]int32{
	"UnknownKind": 0,
	"Label":       1,
}

func (x Topic_Kind) String() string {
	return proto.EnumName(Topic_Kind_name, int32(x))
}

func (Topic_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_106647ce772da30c, []int{2, 0}
}

// Owner is like a container of tasks or other containers.
// It's something that is rarely deleted and cannot really "closed" or "due".
// It's the entity used for Organizations, Teams, Groups, Users
//   and for Projects, Workspaces, Repos, or a Provider.
type Owner struct {
	ID          github_com_cayleygraph_quad.IRI `protobuf:"bytes,1,opt,name=id,proto3,casttype=github.com/cayleygraph/quad.IRI" json:"id,omitempty" quad:"@id"`
	CreatedAt   *time.Time                      `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at,omitempty" quad:"schema:createdAt,optional"`
	UpdatedAt   *time.Time                      `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3,stdtime" json:"updated_at,omitempty" quad:"schema:updatedAt,optional"`
	LocalID     string                          `protobuf:"bytes,5,opt,name=local_id,json=localId,proto3" json:"local_id,omitempty" quad:"schema:localId,optional"`
	Kind        Owner_Kind                      `protobuf:"varint,10,opt,name=kind,proto3,enum=depviz.model.Owner_Kind" json:"kind,omitempty" quad:"schema:kind,optional"`
	ShortName   string                          `protobuf:"bytes,11,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty" quad:"schema:shortName,optional"`
	FullName    string                          `protobuf:"bytes,12,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty" quad:"schema:fullName,optional"`
	Driver      Driver                          `protobuf:"varint,13,opt,name=driver,proto3,enum=depviz.model.Driver" json:"driver,omitempty" quad:"schema:driver,optional"`
	Homepage    string                          `protobuf:"bytes,14,opt,name=homepage,proto3" json:"homepage,omitempty" quad:"schema:homepage,optional"`
	Description string                          `protobuf:"bytes,15,opt,name=description,proto3" json:"description,omitempty" quad:"schema:description,optional"`
	ForkStatus  Owner_ForkStatus                `protobuf:"varint,16,opt,name=fork_status,json=forkStatus,proto3,enum=depviz.model.Owner_ForkStatus" json:"fork_status,omitempty" quad:"schema:forkStatus,optional"`
	AvatarURL   string                          `protobuf:"bytes,17,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty" quad:"schema:avatarUrl,optional"`
	// relationships
	HasOwner github_com_cayleygraph_quad.IRI `protobuf:"bytes,100,opt,name=has_owner,json=hasOwner,proto3,casttype=github.com/cayleygraph/quad.IRI" json:"has_owner,omitempty" quad:"hasOwner,optional"`
}

func (m *Owner) Reset()         { *m = Owner{} }
func (m *Owner) String() string { return proto.CompactTextString(m) }
func (*Owner) ProtoMessage()    {}
func (*Owner) Descriptor() ([]byte, []int) {
	return fileDescriptor_106647ce772da30c, []int{0}
}
func (m *Owner) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Owner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Owner.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Owner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Owner.Merge(m, src)
}
func (m *Owner) XXX_Size() int {
	return m.Size()
}
func (m *Owner) XXX_DiscardUnknown() {
	xxx_messageInfo_Owner.DiscardUnknown(m)
}

var xxx_messageInfo_Owner proto.InternalMessageInfo

// Task defines a step or an action.
// It is owned by an owner and can link to other Owners.
// A task can contain other tasks (epic, story, milestone).
// It can be closed and can have due dates.
// It's the entity used for Issues, Pull Requests, Merge Requests, Cards, Epics, Milestones, Stories.
type Task struct {
	ID                github_com_cayleygraph_quad.IRI `protobuf:"bytes,1,opt,name=id,proto3,casttype=github.com/cayleygraph/quad.IRI" json:"id,omitempty" quad:"@id"`
	CreatedAt         *time.Time                      `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at,omitempty" quad:"schema:createdAt,optional"`
	UpdatedAt         *time.Time                      `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3,stdtime" json:"updated_at,omitempty" quad:"schema:updatedAt,optional"`
	LocalID           string                          `protobuf:"bytes,5,opt,name=local_id,json=localId,proto3" json:"local_id,omitempty" quad:"schema:localId,optional"`
	Kind              Task_Kind                       `protobuf:"varint,10,opt,name=kind,proto3,enum=depviz.model.Task_Kind" json:"kind,omitempty" quad:"schema:kind,optional"`
	Title             string                          `protobuf:"bytes,11,opt,name=title,proto3" json:"title,omitempty" quad:"schema:title,optional"`
	Description       string                          `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty" quad:"schema:description,optional"`
	Driver            Driver                          `protobuf:"varint,13,opt,name=driver,proto3,enum=depviz.model.Driver" json:"driver,omitempty" quad:"schema:driver,optional"`
	DueOn             *time.Time                      `protobuf:"bytes,14,opt,name=due_on,json=dueOn,proto3,stdtime" json:"due_on,omitempty" quad:"schema:dueOn,optional"`
	CompletedAt       *time.Time                      `protobuf:"bytes,15,opt,name=completed_at,json=completedAt,proto3,stdtime" json:"completed_at,omitempty" quad:"schema:completedAt,optional"`
	State             Task_State                      `protobuf:"varint,16,opt,name=state,proto3,enum=depviz.model.Task_State" json:"state,omitempty" quad:"schema:state,optional"`
	IsLocked          bool                            `protobuf:"varint,17,opt,name=is_locked,json=isLocked,proto3" json:"is_locked,omitempty" quad:"schema:isLocked,optional"`
	NumComments       int32                           `protobuf:"varint,18,opt,name=num_comments,json=numComments,proto3" json:"num_comments,omitempty" quad:"schema:numComments,optional"`
	NumUpvotes        int32                           `protobuf:"varint,19,opt,name=num_upvotes,json=numUpvotes,proto3" json:"num_upvotes,omitempty" quad:"schema:numUpvotes,optional"`
	NumDownvotes      int32                           `protobuf:"varint,20,opt,name=num_downvotes,json=numDownvotes,proto3" json:"num_downvotes,omitempty" quad:"schema:numDownvotes,optional"`
	EstimatedDuration string                          `protobuf:"bytes,21,opt,name=estimated_duration,json=estimatedDuration,proto3" json:"estimated_duration,omitempty" quad:"schema:estimated_duration,optional"`
	// relationships
	HasAuthor     github_com_cayleygraph_quad.IRI   `protobuf:"bytes,100,opt,name=has_author,json=hasAuthor,proto3,casttype=github.com/cayleygraph/quad.IRI" json:"has_author,omitempty" quad:"hasAuthor,optional"`
	HasOwner      github_com_cayleygraph_quad.IRI   `protobuf:"bytes,101,opt,name=has_owner,json=hasOwner,proto3,casttype=github.com/cayleygraph/quad.IRI" json:"has_owner,omitempty" quad:"hasOwner,optional"`
	HasMilestone  github_com_cayleygraph_quad.IRI   `protobuf:"bytes,102,opt,name=has_milestone,json=hasMilestone,proto3,casttype=github.com/cayleygraph/quad.IRI" json:"has_milestone,omitempty" quad:"hasMilestone,optional"`
	HasAssignee   []github_com_cayleygraph_quad.IRI `protobuf:"bytes,103,rep,name=has_assignee,json=hasAssignee,proto3,casttype=github.com/cayleygraph/quad.IRI" json:"has_assignee,omitempty" quad:"hasAssignee,optional"`
	HasReviewer   []github_com_cayleygraph_quad.IRI `protobuf:"bytes,104,rep,name=has_reviewer,json=hasReviewer,proto3,casttype=github.com/cayleygraph/quad.IRI" json:"has_reviewer,omitempty" quad:"hasReviewer,optional"`
	HasLabel      []github_com_cayleygraph_quad.IRI `protobuf:"bytes,105,rep,name=has_label,json=hasLabel,proto3,casttype=github.com/cayleygraph/quad.IRI" json:"has_label,omitempty" quad:"hasLabel,optional"`
	IsDependingOn []github_com_cayleygraph_quad.IRI `protobuf:"bytes,106,rep,name=is_depending_on,json=isDependingOn,proto3,casttype=github.com/cayleygraph/quad.IRI" json:"is_depending_on,omitempty" quad:"isDependingOn,optional"`
	IsBlocking    []github_com_cayleygraph_quad.IRI `protobuf:"bytes,107,rep,name=is_blocking,json=isBlocking,proto3,casttype=github.com/cayleygraph/quad.IRI" json:"is_blocking,omitempty" quad:"isBlocking,optional"`
	IsRelatedWith []github_com_cayleygraph_quad.IRI `protobuf:"bytes,108,rep,name=is_related_with,json=isRelatedWith,proto3,casttype=github.com/cayleygraph/quad.IRI" json:"is_related_with,omitempty" quad:"isRelatedWith,optional"`
	IsPartOf      []github_com_cayleygraph_quad.IRI `protobuf:"bytes,109,rep,name=is_part_of,json=isPartOf,proto3,casttype=github.com/cayleygraph/quad.IRI" json:"is_part_of,omitempty" quad:"isPartOf,optional"`
	HasPart       []github_com_cayleygraph_quad.IRI `protobuf:"bytes,110,rep,name=has_part,json=hasPart,proto3,casttype=github.com/cayleygraph/quad.IRI" json:"has_part,omitempty" quad:"isPartOf,optional"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_106647ce772da30c, []int{1}
}
func (m *Task) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Task.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return m.Size()
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

type Topic struct {
	ID          github_com_cayleygraph_quad.IRI `protobuf:"bytes,1,opt,name=id,proto3,casttype=github.com/cayleygraph/quad.IRI" json:"id,omitempty" quad:"@id"`
	CreatedAt   *time.Time                      `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at,omitempty" quad:"schema:createdAt,optional"`
	UpdatedAt   *time.Time                      `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3,stdtime" json:"updated_at,omitempty" quad:"schema:updatedAt,optional"`
	LocalID     string                          `protobuf:"bytes,5,opt,name=local_id,json=localId,proto3" json:"local_id,omitempty" quad:"schema:localId,optional"`
	Kind        Topic_Kind                      `protobuf:"varint,10,opt,name=kind,proto3,enum=depviz.model.Topic_Kind" json:"kind,omitempty" quad:"schema:kind,optional"`
	Title       string                          `protobuf:"bytes,11,opt,name=title,proto3" json:"title,omitempty" quad:"schema:title,optional"`
	Driver      Driver                          `protobuf:"varint,12,opt,name=driver,proto3,enum=depviz.model.Driver" json:"driver,omitempty" quad:"schema:driver,optional"`
	Color       string                          `protobuf:"bytes,13,opt,name=color,proto3" json:"color,omitempty" quad:"schema:color,optional"`
	Description string                          `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty" quad:"schema:description,optional"`
	// relationships
	HasOwner github_com_cayleygraph_quad.IRI `protobuf:"bytes,100,opt,name=has_owner,json=hasOwner,proto3,casttype=github.com/cayleygraph/quad.IRI" json:"has_owner,omitempty" quad:"hasOwner,optional"`
}

func (m *Topic) Reset()         { *m = Topic{} }
func (m *Topic) String() string { return proto.CompactTextString(m) }
func (*Topic) ProtoMessage()    {}
func (*Topic) Descriptor() ([]byte, []int) {
	return fileDescriptor_106647ce772da30c, []int{2}
}
func (m *Topic) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Topic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Topic.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Topic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Topic.Merge(m, src)
}
func (m *Topic) XXX_Size() int {
	return m.Size()
}
func (m *Topic) XXX_DiscardUnknown() {
	xxx_messageInfo_Topic.DiscardUnknown(m)
}

var xxx_messageInfo_Topic proto.InternalMessageInfo

type Batch struct {
	Tasks  []*Task  `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Owners []*Owner `protobuf:"bytes,2,rep,name=owners,proto3" json:"owners,omitempty"`
	Topics []*Topic `protobuf:"bytes,3,rep,name=topics,proto3" json:"topics,omitempty"`
}

func (m *Batch) Reset()         { *m = Batch{} }
func (m *Batch) String() string { return proto.CompactTextString(m) }
func (*Batch) ProtoMessage()    {}
func (*Batch) Descriptor() ([]byte, []int) {
	return fileDescriptor_106647ce772da30c, []int{3}
}
func (m *Batch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Batch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Batch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Batch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Batch.Merge(m, src)
}
func (m *Batch) XXX_Size() int {
	return m.Size()
}
func (m *Batch) XXX_DiscardUnknown() {
	xxx_messageInfo_Batch.DiscardUnknown(m)
}

var xxx_messageInfo_Batch proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("depviz.model.Driver", Driver_name, Driver_value)
	golang_proto.RegisterEnum("depviz.model.Driver", Driver_name, Driver_value)
	proto.RegisterEnum("depviz.model.Owner_Kind", Owner_Kind_name, Owner_Kind_value)
	golang_proto.RegisterEnum("depviz.model.Owner_Kind", Owner_Kind_name, Owner_Kind_value)
	proto.RegisterEnum("depviz.model.Owner_ForkStatus", Owner_ForkStatus_name, Owner_ForkStatus_value)
	golang_proto.RegisterEnum("depviz.model.Owner_ForkStatus", Owner_ForkStatus_name, Owner_ForkStatus_value)
	proto.RegisterEnum("depviz.model.Task_Kind", Task_Kind_name, Task_Kind_value)
	golang_proto.RegisterEnum("depviz.model.Task_Kind", Task_Kind_name, Task_Kind_value)
	proto.RegisterEnum("depviz.model.Task_State", Task_State_name, Task_State_value)
	golang_proto.RegisterEnum("depviz.model.Task_State", Task_State_name, Task_State_value)
	proto.RegisterEnum("depviz.model.Topic_Kind", Topic_Kind_name, Topic_Kind_value)
	golang_proto.RegisterEnum("depviz.model.Topic_Kind", Topic_Kind_name, Topic_Kind_value)
	proto.RegisterType((*Owner)(nil), "depviz.model.Owner")
	golang_proto.RegisterType((*Owner)(nil), "depviz.model.Owner")
	proto.RegisterType((*Task)(nil), "depviz.model.Task")
	golang_proto.RegisterType((*Task)(nil), "depviz.model.Task")
	proto.RegisterType((*Topic)(nil), "depviz.model.Topic")
	golang_proto.RegisterType((*Topic)(nil), "depviz.model.Topic")
	proto.RegisterType((*Batch)(nil), "depviz.model.Batch")
	golang_proto.RegisterType((*Batch)(nil), "depviz.model.Batch")
}

func init() { proto.RegisterFile("dvmodel.proto", fileDescriptor_106647ce772da30c) }
func init() { golang_proto.RegisterFile("dvmodel.proto", fileDescriptor_106647ce772da30c) }

var fileDescriptor_106647ce772da30c = []byte{
	// 1497 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0x41, 0x73, 0xdb, 0x44,
	0x14, 0xb6, 0x9c, 0xd8, 0x8d, 0xd7, 0x4e, 0xa3, 0x6c, 0xdb, 0x41, 0x04, 0xb0, 0x5c, 0x17, 0xa8,
	0x81, 0xd6, 0x1e, 0xca, 0x4c, 0x99, 0xe9, 0x0c, 0xd3, 0xc6, 0x31, 0x6d, 0x3d, 0xa4, 0x24, 0xe3,
	0x26, 0xc3, 0x4c, 0x29, 0xa3, 0x59, 0x5b, 0x1b, 0x69, 0xb1, 0xa4, 0x55, 0xb5, 0x52, 0x32, 0xed,
	0x5f, 0xe0, 0xd2, 0x03, 0x3f, 0x82, 0x9f, 0xc1, 0x31, 0x07, 0x0e, 0x3d, 0x72, 0x12, 0x34, 0xf9,
	0x07, 0x3e, 0x31, 0x9c, 0x98, 0x5d, 0x49, 0xb6, 0x14, 0xbb, 0xa5, 0xee, 0x84, 0x72, 0xe9, 0xcd,
	0x7a, 0xef, 0x7b, 0xdf, 0xf7, 0x56, 0x6f, 0xf7, 0xed, 0x93, 0xc1, 0xb2, 0xbe, 0x6f, 0x53, 0x1d,
	0x5b, 0x4d, 0xd7, 0xa3, 0x3e, 0x85, 0x15, 0x1d, 0xbb, 0xfb, 0xe4, 0x49, 0x53, 0xd8, 0xd6, 0x54,
	0x83, 0x52, 0xc3, 0xc2, 0x2d, 0xe1, 0xeb, 0x07, 0x7b, 0x2d, 0x9f, 0xd8, 0x98, 0xf9, 0xc8, 0x76,
	0x23, 0xf8, 0xda, 0x55, 0x83, 0xf8, 0x66, 0xd0, 0x6f, 0x0e, 0xa8, 0xdd, 0x32, 0xa8, 0x41, 0x27,
	0x48, 0xfe, 0x24, 0x1e, 0xc4, 0xaf, 0x08, 0x5e, 0xff, 0xad, 0x04, 0x0a, 0x5b, 0x07, 0x0e, 0xf6,
	0xe0, 0x1d, 0x90, 0x27, 0xba, 0x22, 0xd5, 0xa4, 0x46, 0xa9, 0xfd, 0xe5, 0x51, 0xa8, 0xe6, 0xbb,
	0x9d, 0x51, 0xa8, 0x82, 0x47, 0x01, 0xd2, 0x6f, 0xd4, 0x6f, 0x11, 0xbd, 0xfe, 0x77, 0xa8, 0xaa,
	0x29, 0xf2, 0x01, 0x7a, 0x6c, 0xe1, 0xc7, 0x86, 0x87, 0x5c, 0xb3, 0xc5, 0x41, 0xcd, 0x6e, 0xaf,
	0xdb, 0xcb, 0x13, 0x1d, 0x1a, 0x00, 0x0c, 0x3c, 0x8c, 0x7c, 0xac, 0x6b, 0xc8, 0x57, 0x16, 0x6a,
	0x52, 0xa3, 0x7c, 0x6d, 0xad, 0x19, 0xe5, 0xdd, 0x4c, 0xb2, 0x69, 0xee, 0x24, 0x79, 0xb7, 0xaf,
	0x1c, 0x86, 0xaa, 0x34, 0x0a, 0xd5, 0x5a, 0x24, 0xc5, 0x06, 0x26, 0xb6, 0xd1, 0x8d, 0x98, 0x62,
	0xdd, 0xbf, 0x42, 0x5d, 0x9f, 0x50, 0x07, 0x59, 0xf5, 0xa7, 0x7f, 0xa8, 0x52, 0xaf, 0x34, 0x76,
	0x70, 0xa1, 0xc0, 0xd5, 0x13, 0xa1, 0xc5, 0xd7, 0x14, 0x8a, 0x29, 0xa6, 0x85, 0xc6, 0x0e, 0x78,
	0x17, 0x2c, 0x59, 0x74, 0x80, 0x2c, 0x8d, 0xe8, 0x4a, 0x41, 0xbc, 0xa0, 0xab, 0x47, 0xa1, 0x7a,
	0x66, 0x93, 0xdb, 0xc4, 0x5b, 0xaa, 0x66, 0x18, 0x05, 0xb6, 0xab, 0x4f, 0xf8, 0x7a, 0x67, 0x62,
	0x13, 0xbc, 0x07, 0x16, 0x87, 0xc4, 0xd1, 0x15, 0x50, 0x93, 0x1a, 0x67, 0xaf, 0x29, 0xcd, 0x74,
	0x6d, 0x9b, 0xa2, 0x0e, 0xcd, 0x6f, 0x88, 0xa3, 0xb7, 0xd5, 0x51, 0xa8, 0xbe, 0x97, 0x21, 0xe5,
	0x61, 0x29, 0x46, 0x41, 0x03, 0x37, 0x00, 0x60, 0x26, 0xf5, 0x7c, 0xcd, 0x41, 0x36, 0x56, 0xca,
	0x22, 0xb5, 0x0f, 0xa7, 0x56, 0x28, 0x20, 0xdf, 0x22, 0x1b, 0xa7, 0xe2, 0x4b, 0x63, 0x23, 0xbc,
	0x05, 0x4a, 0x7b, 0x81, 0x65, 0x45, 0x1c, 0x15, 0xc1, 0x71, 0x69, 0x14, 0xaa, 0x6a, 0x86, 0x83,
	0x23, 0x4e, 0x50, 0x2c, 0x25, 0x36, 0xb8, 0x05, 0x8a, 0xba, 0x47, 0xf6, 0xb1, 0xa7, 0x2c, 0x8b,
	0x75, 0x9d, 0xcf, 0xae, 0xab, 0x23, 0x7c, 0xed, 0x8b, 0xa3, 0x50, 0xfd, 0x20, 0x43, 0x1a, 0x05,
	0xa5, 0x28, 0x63, 0x1a, 0x78, 0x13, 0x2c, 0x99, 0xd4, 0xc6, 0x2e, 0x32, 0xb0, 0x72, 0xf6, 0x05,
	0x19, 0x25, 0x80, 0x74, 0x46, 0x89, 0x0d, 0xde, 0x05, 0x65, 0x1d, 0xb3, 0x81, 0x47, 0x84, 0x4f,
	0x59, 0x11, 0x1c, 0x1f, 0x8f, 0x42, 0xb5, 0x9e, 0x4d, 0x60, 0x82, 0x49, 0xd1, 0xa4, 0x43, 0xe1,
	0x1e, 0x28, 0xef, 0x51, 0x6f, 0xa8, 0x31, 0x1f, 0xf9, 0x01, 0x53, 0x64, 0xb1, 0xc0, 0xea, 0xac,
	0xc2, 0xdd, 0xa6, 0xde, 0xf0, 0xbe, 0x40, 0xb5, 0x3f, 0x1a, 0x85, 0xea, 0xc5, 0xec, 0xfb, 0x1b,
	0x3b, 0x53, 0x42, 0x60, 0x62, 0x85, 0xdb, 0x00, 0xa0, 0x7d, 0xe4, 0x23, 0x4f, 0x0b, 0x3c, 0x4b,
	0x59, 0x15, 0x09, 0x7f, 0x7e, 0x14, 0xaa, 0xa5, 0x75, 0x61, 0xdd, 0xed, 0x6d, 0x4e, 0xd5, 0x35,
	0xc2, 0xef, 0x7a, 0x56, 0xba, 0xae, 0x63, 0x23, 0x7c, 0x08, 0x4a, 0x26, 0x62, 0x1a, 0xe5, 0xc9,
	0x29, 0xba, 0x20, 0xbc, 0x39, 0x0a, 0x55, 0x25, 0xe2, 0x30, 0x11, 0x13, 0x69, 0x4f, 0x62, 0x5f,
	0xe5, 0x7c, 0x2f, 0x25, 0x61, 0xf5, 0x5d, 0xb0, 0xc8, 0x77, 0x2a, 0x5c, 0x01, 0xe5, 0x5d, 0x67,
	0xe8, 0xd0, 0x03, 0x87, 0x3f, 0xca, 0x39, 0xb8, 0x04, 0x16, 0x77, 0x19, 0xf6, 0x64, 0x09, 0xca,
	0xa0, 0xb2, 0xe5, 0x19, 0xc8, 0x21, 0x4f, 0x10, 0x97, 0x90, 0xf3, 0xdc, 0xb7, 0x83, 0x91, 0x2d,
	0x2f, 0xf0, 0x5f, 0x3d, 0xec, 0x52, 0x79, 0x11, 0x56, 0xc0, 0xd2, 0xb6, 0x47, 0xf7, 0x89, 0x8e,
	0x3d, 0xb9, 0x50, 0xff, 0x0a, 0x80, 0xc9, 0x7b, 0x84, 0x17, 0xc0, 0x6a, 0x4c, 0x3e, 0x31, 0xca,
	0x39, 0x08, 0x40, 0xb1, 0xcb, 0xb8, 0x45, 0x96, 0x78, 0x78, 0x97, 0xdd, 0xa7, 0x81, 0x37, 0xc0,
	0x72, 0xbe, 0xfe, 0xf3, 0x79, 0xb0, 0xb8, 0x83, 0xd8, 0xf0, 0x6d, 0x37, 0x7b, 0x13, 0xdd, 0x6c,
	0x33, 0xd3, 0xcd, 0xde, 0xc9, 0x1e, 0x0a, 0x5e, 0x86, 0xb9, 0x9a, 0xd9, 0x75, 0x50, 0xf0, 0x89,
	0x6f, 0x25, 0x7d, 0xac, 0x36, 0x0a, 0xd5, 0xf7, 0x33, 0x51, 0xc2, 0x9b, 0x0a, 0x8b, 0xe0, 0x27,
	0xcf, 0x7a, 0xe5, 0xf5, 0xcf, 0xfa, 0xa9, 0xf7, 0xb1, 0xef, 0x41, 0x51, 0x0f, 0xb0, 0x46, 0x1d,
	0xd1, 0xc5, 0x5e, 0x5e, 0xcf, 0x46, 0x5c, 0xcf, 0xec, 0x9a, 0xf5, 0x00, 0x6f, 0x39, 0x27, 0x6a,
	0x59, 0x10, 0x46, 0x68, 0x83, 0xca, 0x80, 0xda, 0xae, 0x85, 0xe3, 0x2d, 0xb3, 0xf2, 0xaf, 0x12,
	0xcd, 0x58, 0x22, 0xfb, 0x62, 0xc6, 0x24, 0x53, 0x9b, 0xa6, 0x9c, 0x72, 0xc1, 0x6d, 0x50, 0xe0,
	0x3d, 0x10, 0xc7, 0x2d, 0x50, 0x99, 0x51, 0x6d, 0x7e, 0x40, 0xf1, 0x8c, 0xc2, 0x89, 0xb8, 0x74,
	0xe1, 0x84, 0x01, 0x76, 0x40, 0x89, 0x30, 0xcd, 0xa2, 0x83, 0x21, 0xd6, 0x45, 0xc7, 0x5b, 0x6a,
	0x5f, 0x8e, 0x33, 0xcc, 0xb6, 0x7a, 0xc2, 0x36, 0x05, 0x28, 0xdd, 0xea, 0x13, 0x1b, 0xec, 0x82,
	0x8a, 0x13, 0xd8, 0xda, 0x80, 0xda, 0x36, 0x76, 0x7c, 0xa6, 0xc0, 0x9a, 0xd4, 0x28, 0xcc, 0xa8,
	0xbf, 0x13, 0xd8, 0x1b, 0x31, 0x26, 0x5d, 0xff, 0x94, 0x19, 0xde, 0x06, 0xfc, 0x51, 0x0b, 0xdc,
	0x7d, 0xea, 0x63, 0xa6, 0x9c, 0x13, 0x4c, 0xd3, 0xbd, 0xdc, 0x09, 0xec, 0xdd, 0x08, 0x92, 0xee,
	0xe5, 0x13, 0x2b, 0xdc, 0x04, 0xcb, 0x9c, 0x47, 0xa7, 0x07, 0x4e, 0xc4, 0x74, 0x5e, 0x30, 0x5d,
	0x1e, 0x85, 0xea, 0xa5, 0x93, 0x4c, 0x9d, 0x04, 0x94, 0xe2, 0xaa, 0xa4, 0xed, 0xf0, 0x21, 0x80,
	0x98, 0xf9, 0xc4, 0x16, 0xad, 0x41, 0x0f, 0x3c, 0xd1, 0x4c, 0x95, 0x0b, 0xd1, 0xc9, 0x1d, 0x85,
	0xea, 0x27, 0x19, 0xca, 0x69, 0x68, 0x8a, 0x78, 0x75, 0xec, 0xed, 0xc4, 0x4e, 0xa8, 0x01, 0xc0,
	0x6f, 0x09, 0x14, 0xf8, 0x26, 0x4d, 0xae, 0x89, 0x5b, 0xa3, 0x50, 0x7d, 0x77, 0x7c, 0x4d, 0xac,
	0x0b, 0xd7, 0x7c, 0xf7, 0x44, 0x69, 0x1c, 0x97, 0xbd, 0x86, 0xf0, 0x29, 0x5f, 0x43, 0xd0, 0x04,
	0xcb, 0x9c, 0xdd, 0x26, 0x16, 0x66, 0x3e, 0x75, 0xb0, 0xb2, 0x27, 0x14, 0x36, 0x26, 0x7b, 0xd0,
	0x44, 0xec, 0x5e, 0xe2, 0x9d, 0x4f, 0xa5, 0x92, 0x0e, 0x85, 0x18, 0x54, 0xc4, 0x8b, 0x62, 0x8c,
	0x18, 0x0e, 0xc6, 0x8a, 0x51, 0x5b, 0x68, 0x94, 0xda, 0xed, 0x49, 0x6f, 0xe3, 0x4b, 0x8e, 0x9d,
	0xf3, 0xe9, 0x94, 0x53, 0x91, 0x89, 0x8c, 0x87, 0xf7, 0x09, 0x3e, 0xc0, 0x9e, 0x62, 0xce, 0x90,
	0xe9, 0xc5, 0xce, 0xf9, 0x65, 0x92, 0xc8, 0xa4, 0x2a, 0x16, 0xea, 0x63, 0x4b, 0x21, 0x42, 0x23,
	0x5b, 0x95, 0x4d, 0xee, 0x99, 0xbf, 0x2a, 0x22, 0x0c, 0x5a, 0x60, 0x85, 0x30, 0x4d, 0xc7, 0x2e,
	0x76, 0x74, 0xe2, 0x18, 0xbc, 0x01, 0xfe, 0x28, 0x34, 0x3a, 0x93, 0xde, 0x49, 0x58, 0x27, 0xf1,
	0xa7, 0x3b, 0xdc, 0xab, 0x08, 0x2d, 0x67, 0x62, 0x61, 0x1f, 0x94, 0x09, 0xd3, 0xfa, 0xbc, 0x91,
	0x10, 0xc7, 0x50, 0x86, 0x42, 0x69, 0x7d, 0x14, 0xaa, 0x6b, 0x89, 0x52, 0x3b, 0xf6, 0xcd, 0x27,
	0x03, 0x26, 0x81, 0xf1, 0x8a, 0x3c, 0x6c, 0x89, 0xa3, 0x75, 0x40, 0x7c, 0x53, 0xb1, 0xa6, 0x57,
	0xd4, 0x8b, 0xfc, 0xdf, 0x11, 0xdf, 0x9c, 0x7b, 0x45, 0xa9, 0x58, 0xf8, 0x03, 0x00, 0x84, 0x69,
	0x2e, 0xf2, 0x7c, 0x8d, 0xee, 0x29, 0xf6, 0xc9, 0xf2, 0x10, 0xb6, 0x8d, 0x3c, 0x7f, 0x6b, 0x6f,
	0xce, 0xf2, 0x24, 0x61, 0xf0, 0x01, 0xe0, 0xa5, 0x12, 0xfc, 0x8a, 0x73, 0x3a, 0xe4, 0x67, 0x4c,
	0x24, 0xe2, 0xea, 0xfd, 0x17, 0xcd, 0x85, 0x25, 0x50, 0xe8, 0x32, 0x16, 0xe0, 0x68, 0x30, 0xbc,
	0x87, 0x3d, 0x03, 0xf7, 0xf0, 0xa3, 0x00, 0x33, 0x5f, 0xce, 0xc3, 0x65, 0x50, 0x1a, 0x9f, 0xb4,
	0x68, 0x3a, 0xfc, 0xda, 0x25, 0x03, 0x79, 0x91, 0x47, 0xdd, 0xf7, 0xa9, 0xf7, 0x58, 0x2e, 0x70,
	0xe3, 0x06, 0xf2, 0x74, 0xb9, 0x58, 0x6f, 0x71, 0x23, 0xbf, 0x41, 0x64, 0x50, 0x89, 0x45, 0xc4,
	0x73, 0x34, 0x7d, 0x6e, 0xb9, 0xd8, 0x91, 0x25, 0x3e, 0x24, 0x6e, 0x58, 0x94, 0x61, 0x5d, 0xce,
	0xd7, 0x0f, 0x8b, 0xa0, 0xb0, 0x43, 0x5d, 0x32, 0x78, 0x3b, 0x17, 0xfe, 0xef, 0x5f, 0xb9, 0xa2,
	0x0e, 0x6f, 0x64, 0x30, 0x9c, 0x8c, 0x73, 0x95, 0xd3, 0x19, 0xe7, 0xae, 0x83, 0xc2, 0x80, 0x5a,
	0x34, 0x1a, 0x0f, 0x67, 0x25, 0x22, 0xbc, 0xe9, 0x44, 0x84, 0xe1, 0xe4, 0x84, 0x7a, 0xf6, 0xf5,
	0x27, 0xd4, 0xff, 0xf6, 0x9b, 0xae, 0xfe, 0x92, 0xb3, 0x2b, 0x1a, 0xbb, 0x2c, 0xd5, 0x7f, 0x92,
	0x40, 0xa1, 0x8d, 0xfc, 0x81, 0x09, 0x1b, 0xa0, 0xe0, 0x23, 0x36, 0x64, 0x8a, 0x54, 0x5b, 0x68,
	0x94, 0xaf, 0xc1, 0xe9, 0x81, 0xb0, 0x17, 0x01, 0xe0, 0x67, 0xa0, 0x28, 0x32, 0x66, 0x4a, 0x5e,
	0x40, 0xcf, 0xcd, 0xf8, 0x7c, 0xee, 0xc5, 0x10, 0x0e, 0xf6, 0xf9, 0x16, 0x61, 0xca, 0xc2, 0x2c,
	0xb0, 0xd8, 0x3e, 0xbd, 0x18, 0xf2, 0xe9, 0x65, 0x50, 0x8c, 0xca, 0x08, 0x57, 0xc1, 0x72, 0x9c,
	0x73, 0x64, 0x88, 0x3e, 0x13, 0xef, 0x10, 0xff, 0x6e, 0xd0, 0x97, 0xa5, 0x76, 0xe7, 0xf0, 0x79,
	0x35, 0xf7, 0xd7, 0xf3, 0x6a, 0xee, 0x97, 0xa3, 0x6a, 0xee, 0xf0, 0xa8, 0x2a, 0x3d, 0x3b, 0xaa,
	0x4a, 0x7f, 0x1e, 0x55, 0xa5, 0xa7, 0xc7, 0xd5, 0xdc, 0xaf, 0xc7, 0x55, 0xe9, 0xd9, 0x71, 0x35,
	0xf7, 0xfb, 0x71, 0x35, 0xf7, 0x60, 0xcd, 0xa6, 0x81, 0xd5, 0x24, 0xb4, 0x15, 0xc9, 0xb6, 0xdc,
	0xa1, 0xd1, 0x8a, 0xff, 0x91, 0xeb, 0x17, 0xc5, 0x79, 0xfb, 0xe2, 0x9f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x2a, 0x36, 0xa2, 0x2d, 0xa3, 0x13, 0x00, 0x00,
}

func (m *Owner) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Owner) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Owner) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.HasOwner) > 0 {
		i -= len(m.HasOwner)
		copy(dAtA[i:], m.HasOwner)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.HasOwner)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xa2
	}
	if len(m.AvatarURL) > 0 {
		i -= len(m.AvatarURL)
		copy(dAtA[i:], m.AvatarURL)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.AvatarURL)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.ForkStatus != 0 {
		i = encodeVarintDvmodel(dAtA, i, uint64(m.ForkStatus))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x7a
	}
	if len(m.Homepage) > 0 {
		i -= len(m.Homepage)
		copy(dAtA[i:], m.Homepage)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.Homepage)))
		i--
		dAtA[i] = 0x72
	}
	if m.Driver != 0 {
		i = encodeVarintDvmodel(dAtA, i, uint64(m.Driver))
		i--
		dAtA[i] = 0x68
	}
	if len(m.FullName) > 0 {
		i -= len(m.FullName)
		copy(dAtA[i:], m.FullName)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.FullName)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.ShortName) > 0 {
		i -= len(m.ShortName)
		copy(dAtA[i:], m.ShortName)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.ShortName)))
		i--
		dAtA[i] = 0x5a
	}
	if m.Kind != 0 {
		i = encodeVarintDvmodel(dAtA, i, uint64(m.Kind))
		i--
		dAtA[i] = 0x50
	}
	if len(m.LocalID) > 0 {
		i -= len(m.LocalID)
		copy(dAtA[i:], m.LocalID)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.LocalID)))
		i--
		dAtA[i] = 0x2a
	}
	if m.UpdatedAt != nil {
		n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt):])
		if err1 != nil {
			return 0, err1
		}
		i -= n1
		i = encodeVarintDvmodel(dAtA, i, uint64(n1))
		i--
		dAtA[i] = 0x22
	}
	if m.CreatedAt != nil {
		n2, err2 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt):])
		if err2 != nil {
			return 0, err2
		}
		i -= n2
		i = encodeVarintDvmodel(dAtA, i, uint64(n2))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ID) > 0 {
		i -= len(m.ID)
		copy(dAtA[i:], m.ID)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.ID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Task) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Task) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Task) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.HasPart) > 0 {
		for iNdEx := len(m.HasPart) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.HasPart[iNdEx])
			copy(dAtA[i:], m.HasPart[iNdEx])
			i = encodeVarintDvmodel(dAtA, i, uint64(len(m.HasPart[iNdEx])))
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xf2
		}
	}
	if len(m.IsPartOf) > 0 {
		for iNdEx := len(m.IsPartOf) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.IsPartOf[iNdEx])
			copy(dAtA[i:], m.IsPartOf[iNdEx])
			i = encodeVarintDvmodel(dAtA, i, uint64(len(m.IsPartOf[iNdEx])))
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xea
		}
	}
	if len(m.IsRelatedWith) > 0 {
		for iNdEx := len(m.IsRelatedWith) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.IsRelatedWith[iNdEx])
			copy(dAtA[i:], m.IsRelatedWith[iNdEx])
			i = encodeVarintDvmodel(dAtA, i, uint64(len(m.IsRelatedWith[iNdEx])))
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xe2
		}
	}
	if len(m.IsBlocking) > 0 {
		for iNdEx := len(m.IsBlocking) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.IsBlocking[iNdEx])
			copy(dAtA[i:], m.IsBlocking[iNdEx])
			i = encodeVarintDvmodel(dAtA, i, uint64(len(m.IsBlocking[iNdEx])))
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xda
		}
	}
	if len(m.IsDependingOn) > 0 {
		for iNdEx := len(m.IsDependingOn) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.IsDependingOn[iNdEx])
			copy(dAtA[i:], m.IsDependingOn[iNdEx])
			i = encodeVarintDvmodel(dAtA, i, uint64(len(m.IsDependingOn[iNdEx])))
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xd2
		}
	}
	if len(m.HasLabel) > 0 {
		for iNdEx := len(m.HasLabel) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.HasLabel[iNdEx])
			copy(dAtA[i:], m.HasLabel[iNdEx])
			i = encodeVarintDvmodel(dAtA, i, uint64(len(m.HasLabel[iNdEx])))
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xca
		}
	}
	if len(m.HasReviewer) > 0 {
		for iNdEx := len(m.HasReviewer) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.HasReviewer[iNdEx])
			copy(dAtA[i:], m.HasReviewer[iNdEx])
			i = encodeVarintDvmodel(dAtA, i, uint64(len(m.HasReviewer[iNdEx])))
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xc2
		}
	}
	if len(m.HasAssignee) > 0 {
		for iNdEx := len(m.HasAssignee) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.HasAssignee[iNdEx])
			copy(dAtA[i:], m.HasAssignee[iNdEx])
			i = encodeVarintDvmodel(dAtA, i, uint64(len(m.HasAssignee[iNdEx])))
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xba
		}
	}
	if len(m.HasMilestone) > 0 {
		i -= len(m.HasMilestone)
		copy(dAtA[i:], m.HasMilestone)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.HasMilestone)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xb2
	}
	if len(m.HasOwner) > 0 {
		i -= len(m.HasOwner)
		copy(dAtA[i:], m.HasOwner)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.HasOwner)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xaa
	}
	if len(m.HasAuthor) > 0 {
		i -= len(m.HasAuthor)
		copy(dAtA[i:], m.HasAuthor)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.HasAuthor)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xa2
	}
	if len(m.EstimatedDuration) > 0 {
		i -= len(m.EstimatedDuration)
		copy(dAtA[i:], m.EstimatedDuration)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.EstimatedDuration)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	if m.NumDownvotes != 0 {
		i = encodeVarintDvmodel(dAtA, i, uint64(m.NumDownvotes))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	if m.NumUpvotes != 0 {
		i = encodeVarintDvmodel(dAtA, i, uint64(m.NumUpvotes))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x98
	}
	if m.NumComments != 0 {
		i = encodeVarintDvmodel(dAtA, i, uint64(m.NumComments))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x90
	}
	if m.IsLocked {
		i--
		if m.IsLocked {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x88
	}
	if m.State != 0 {
		i = encodeVarintDvmodel(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	if m.CompletedAt != nil {
		n3, err3 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CompletedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CompletedAt):])
		if err3 != nil {
			return 0, err3
		}
		i -= n3
		i = encodeVarintDvmodel(dAtA, i, uint64(n3))
		i--
		dAtA[i] = 0x7a
	}
	if m.DueOn != nil {
		n4, err4 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.DueOn, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.DueOn):])
		if err4 != nil {
			return 0, err4
		}
		i -= n4
		i = encodeVarintDvmodel(dAtA, i, uint64(n4))
		i--
		dAtA[i] = 0x72
	}
	if m.Driver != 0 {
		i = encodeVarintDvmodel(dAtA, i, uint64(m.Driver))
		i--
		dAtA[i] = 0x68
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x5a
	}
	if m.Kind != 0 {
		i = encodeVarintDvmodel(dAtA, i, uint64(m.Kind))
		i--
		dAtA[i] = 0x50
	}
	if len(m.LocalID) > 0 {
		i -= len(m.LocalID)
		copy(dAtA[i:], m.LocalID)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.LocalID)))
		i--
		dAtA[i] = 0x2a
	}
	if m.UpdatedAt != nil {
		n5, err5 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt):])
		if err5 != nil {
			return 0, err5
		}
		i -= n5
		i = encodeVarintDvmodel(dAtA, i, uint64(n5))
		i--
		dAtA[i] = 0x22
	}
	if m.CreatedAt != nil {
		n6, err6 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt):])
		if err6 != nil {
			return 0, err6
		}
		i -= n6
		i = encodeVarintDvmodel(dAtA, i, uint64(n6))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ID) > 0 {
		i -= len(m.ID)
		copy(dAtA[i:], m.ID)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.ID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Topic) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Topic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Topic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.HasOwner) > 0 {
		i -= len(m.HasOwner)
		copy(dAtA[i:], m.HasOwner)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.HasOwner)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xa2
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.Color) > 0 {
		i -= len(m.Color)
		copy(dAtA[i:], m.Color)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.Color)))
		i--
		dAtA[i] = 0x6a
	}
	if m.Driver != 0 {
		i = encodeVarintDvmodel(dAtA, i, uint64(m.Driver))
		i--
		dAtA[i] = 0x60
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x5a
	}
	if m.Kind != 0 {
		i = encodeVarintDvmodel(dAtA, i, uint64(m.Kind))
		i--
		dAtA[i] = 0x50
	}
	if len(m.LocalID) > 0 {
		i -= len(m.LocalID)
		copy(dAtA[i:], m.LocalID)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.LocalID)))
		i--
		dAtA[i] = 0x2a
	}
	if m.UpdatedAt != nil {
		n7, err7 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt):])
		if err7 != nil {
			return 0, err7
		}
		i -= n7
		i = encodeVarintDvmodel(dAtA, i, uint64(n7))
		i--
		dAtA[i] = 0x22
	}
	if m.CreatedAt != nil {
		n8, err8 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt):])
		if err8 != nil {
			return 0, err8
		}
		i -= n8
		i = encodeVarintDvmodel(dAtA, i, uint64(n8))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ID) > 0 {
		i -= len(m.ID)
		copy(dAtA[i:], m.ID)
		i = encodeVarintDvmodel(dAtA, i, uint64(len(m.ID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Batch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Batch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Batch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Topics) > 0 {
		for iNdEx := len(m.Topics) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Topics[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDvmodel(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Owners) > 0 {
		for iNdEx := len(m.Owners) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Owners[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDvmodel(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Tasks) > 0 {
		for iNdEx := len(m.Tasks) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Tasks[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDvmodel(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintDvmodel(dAtA []byte, offset int, v uint64) int {
	offset -= sovDvmodel(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Owner) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovDvmodel(uint64(l))
	}
	if m.CreatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt)
		n += 1 + l + sovDvmodel(uint64(l))
	}
	if m.UpdatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt)
		n += 1 + l + sovDvmodel(uint64(l))
	}
	l = len(m.LocalID)
	if l > 0 {
		n += 1 + l + sovDvmodel(uint64(l))
	}
	if m.Kind != 0 {
		n += 1 + sovDvmodel(uint64(m.Kind))
	}
	l = len(m.ShortName)
	if l > 0 {
		n += 1 + l + sovDvmodel(uint64(l))
	}
	l = len(m.FullName)
	if l > 0 {
		n += 1 + l + sovDvmodel(uint64(l))
	}
	if m.Driver != 0 {
		n += 1 + sovDvmodel(uint64(m.Driver))
	}
	l = len(m.Homepage)
	if l > 0 {
		n += 1 + l + sovDvmodel(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovDvmodel(uint64(l))
	}
	if m.ForkStatus != 0 {
		n += 2 + sovDvmodel(uint64(m.ForkStatus))
	}
	l = len(m.AvatarURL)
	if l > 0 {
		n += 2 + l + sovDvmodel(uint64(l))
	}
	l = len(m.HasOwner)
	if l > 0 {
		n += 2 + l + sovDvmodel(uint64(l))
	}
	return n
}

func (m *Task) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovDvmodel(uint64(l))
	}
	if m.CreatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt)
		n += 1 + l + sovDvmodel(uint64(l))
	}
	if m.UpdatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt)
		n += 1 + l + sovDvmodel(uint64(l))
	}
	l = len(m.LocalID)
	if l > 0 {
		n += 1 + l + sovDvmodel(uint64(l))
	}
	if m.Kind != 0 {
		n += 1 + sovDvmodel(uint64(m.Kind))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDvmodel(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovDvmodel(uint64(l))
	}
	if m.Driver != 0 {
		n += 1 + sovDvmodel(uint64(m.Driver))
	}
	if m.DueOn != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.DueOn)
		n += 1 + l + sovDvmodel(uint64(l))
	}
	if m.CompletedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CompletedAt)
		n += 1 + l + sovDvmodel(uint64(l))
	}
	if m.State != 0 {
		n += 2 + sovDvmodel(uint64(m.State))
	}
	if m.IsLocked {
		n += 3
	}
	if m.NumComments != 0 {
		n += 2 + sovDvmodel(uint64(m.NumComments))
	}
	if m.NumUpvotes != 0 {
		n += 2 + sovDvmodel(uint64(m.NumUpvotes))
	}
	if m.NumDownvotes != 0 {
		n += 2 + sovDvmodel(uint64(m.NumDownvotes))
	}
	l = len(m.EstimatedDuration)
	if l > 0 {
		n += 2 + l + sovDvmodel(uint64(l))
	}
	l = len(m.HasAuthor)
	if l > 0 {
		n += 2 + l + sovDvmodel(uint64(l))
	}
	l = len(m.HasOwner)
	if l > 0 {
		n += 2 + l + sovDvmodel(uint64(l))
	}
	l = len(m.HasMilestone)
	if l > 0 {
		n += 2 + l + sovDvmodel(uint64(l))
	}
	if len(m.HasAssignee) > 0 {
		for _, s := range m.HasAssignee {
			l = len(s)
			n += 2 + l + sovDvmodel(uint64(l))
		}
	}
	if len(m.HasReviewer) > 0 {
		for _, s := range m.HasReviewer {
			l = len(s)
			n += 2 + l + sovDvmodel(uint64(l))
		}
	}
	if len(m.HasLabel) > 0 {
		for _, s := range m.HasLabel {
			l = len(s)
			n += 2 + l + sovDvmodel(uint64(l))
		}
	}
	if len(m.IsDependingOn) > 0 {
		for _, s := range m.IsDependingOn {
			l = len(s)
			n += 2 + l + sovDvmodel(uint64(l))
		}
	}
	if len(m.IsBlocking) > 0 {
		for _, s := range m.IsBlocking {
			l = len(s)
			n += 2 + l + sovDvmodel(uint64(l))
		}
	}
	if len(m.IsRelatedWith) > 0 {
		for _, s := range m.IsRelatedWith {
			l = len(s)
			n += 2 + l + sovDvmodel(uint64(l))
		}
	}
	if len(m.IsPartOf) > 0 {
		for _, s := range m.IsPartOf {
			l = len(s)
			n += 2 + l + sovDvmodel(uint64(l))
		}
	}
	if len(m.HasPart) > 0 {
		for _, s := range m.HasPart {
			l = len(s)
			n += 2 + l + sovDvmodel(uint64(l))
		}
	}
	return n
}

func (m *Topic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovDvmodel(uint64(l))
	}
	if m.CreatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt)
		n += 1 + l + sovDvmodel(uint64(l))
	}
	if m.UpdatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt)
		n += 1 + l + sovDvmodel(uint64(l))
	}
	l = len(m.LocalID)
	if l > 0 {
		n += 1 + l + sovDvmodel(uint64(l))
	}
	if m.Kind != 0 {
		n += 1 + sovDvmodel(uint64(m.Kind))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDvmodel(uint64(l))
	}
	if m.Driver != 0 {
		n += 1 + sovDvmodel(uint64(m.Driver))
	}
	l = len(m.Color)
	if l > 0 {
		n += 1 + l + sovDvmodel(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovDvmodel(uint64(l))
	}
	l = len(m.HasOwner)
	if l > 0 {
		n += 2 + l + sovDvmodel(uint64(l))
	}
	return n
}

func (m *Batch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Tasks) > 0 {
		for _, e := range m.Tasks {
			l = e.Size()
			n += 1 + l + sovDvmodel(uint64(l))
		}
	}
	if len(m.Owners) > 0 {
		for _, e := range m.Owners {
			l = e.Size()
			n += 1 + l + sovDvmodel(uint64(l))
		}
	}
	if len(m.Topics) > 0 {
		for _, e := range m.Topics {
			l = e.Size()
			n += 1 + l + sovDvmodel(uint64(l))
		}
	}
	return n
}

func sovDvmodel(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDvmodel(x uint64) (n int) {
	return sovDvmodel(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Owner) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDvmodel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Owner: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Owner: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = github_com_cayleygraph_quad.IRI(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedAt == nil {
				m.UpdatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocalID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Kind", wireType)
			}
			m.Kind = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Kind |= Owner_Kind(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShortName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShortName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FullName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FullName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Driver", wireType)
			}
			m.Driver = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Driver |= Driver(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Homepage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Homepage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForkStatus", wireType)
			}
			m.ForkStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ForkStatus |= Owner_ForkStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvatarURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AvatarURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 100:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasOwner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasOwner = github_com_cayleygraph_quad.IRI(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDvmodel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDvmodel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Task) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDvmodel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Task: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Task: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = github_com_cayleygraph_quad.IRI(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedAt == nil {
				m.UpdatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocalID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Kind", wireType)
			}
			m.Kind = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Kind |= Task_Kind(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Driver", wireType)
			}
			m.Driver = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Driver |= Driver(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DueOn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DueOn == nil {
				m.DueOn = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.DueOn, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompletedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CompletedAt == nil {
				m.CompletedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CompletedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= Task_State(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsLocked", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsLocked = bool(v != 0)
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NumComments", wireType)
			}
			m.NumComments = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NumComments |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NumUpvotes", wireType)
			}
			m.NumUpvotes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NumUpvotes |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NumDownvotes", wireType)
			}
			m.NumDownvotes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NumDownvotes |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EstimatedDuration", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EstimatedDuration = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 100:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasAuthor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasAuthor = github_com_cayleygraph_quad.IRI(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasOwner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasOwner = github_com_cayleygraph_quad.IRI(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 102:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMilestone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasMilestone = github_com_cayleygraph_quad.IRI(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 103:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasAssignee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasAssignee = append(m.HasAssignee, github_com_cayleygraph_quad.IRI(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 104:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasReviewer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasReviewer = append(m.HasReviewer, github_com_cayleygraph_quad.IRI(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 105:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasLabel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasLabel = append(m.HasLabel, github_com_cayleygraph_quad.IRI(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 106:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsDependingOn", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IsDependingOn = append(m.IsDependingOn, github_com_cayleygraph_quad.IRI(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 107:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsBlocking", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IsBlocking = append(m.IsBlocking, github_com_cayleygraph_quad.IRI(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 108:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsRelatedWith", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IsRelatedWith = append(m.IsRelatedWith, github_com_cayleygraph_quad.IRI(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 109:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsPartOf", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IsPartOf = append(m.IsPartOf, github_com_cayleygraph_quad.IRI(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 110:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasPart", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasPart = append(m.HasPart, github_com_cayleygraph_quad.IRI(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDvmodel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDvmodel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Topic) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDvmodel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Topic: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Topic: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = github_com_cayleygraph_quad.IRI(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedAt == nil {
				m.UpdatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocalID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Kind", wireType)
			}
			m.Kind = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Kind |= Topic_Kind(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Driver", wireType)
			}
			m.Driver = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Driver |= Driver(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Color", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Color = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 100:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasOwner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasOwner = github_com_cayleygraph_quad.IRI(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDvmodel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDvmodel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Batch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDvmodel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Batch: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Batch: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tasks", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tasks = append(m.Tasks, &Task{})
			if err := m.Tasks[len(m.Tasks)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owners", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owners = append(m.Owners, &Owner{})
			if err := m.Owners[len(m.Owners)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Topics", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDvmodel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDvmodel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Topics = append(m.Topics, &Topic{})
			if err := m.Topics[len(m.Topics)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDvmodel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDvmodel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDvmodel(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDvmodel
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDvmodel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDvmodel
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDvmodel
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDvmodel
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDvmodel        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDvmodel          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDvmodel = fmt.Errorf("proto: unexpected end of group")
)
